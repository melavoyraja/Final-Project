/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CityAdminWorkArea;

import Business.City.City;
import Business.Community.Community;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HouseKeepingEnterprise;
import Business.House.House;
import Business.Organization.HouseholdOrganization;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author puneeth
 */
public class AssignHousetoEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AssignHousetoEmployeeJPanel
     */
    private JPanel userProcessContainer;
    private City city;
    public AssignHousetoEmployeeJPanel(JPanel userProcessContainer,City city) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.city = city;
        populateHouses();
        populateEmployee();
        populateEmployeeHouse();
    }

    public void populateHouses(){
        DefaultTableModel model  = (DefaultTableModel) houseJTable.getModel();
        model.setRowCount(0);
        
        for(Community c:city.getCommunityDirectory().getCommunityList()){
            for(House h:c.getHouseDirectory().getHouseList()){
                Object[] row = new Object[4];
                row[0] = h;
                row[1] = h.getHouseNo();
                row[2] = h.getStreetName();
                row[3] = c.getCommunityName();
                model.addRow(row);
            }
            
        }
    }
    
    public void populateEmployee(){
        DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();
        model.setRowCount(0);
        for(Enterprise e:city.getEnterpriseDirectory().getEnterpriseList()){
            if(e instanceof HouseKeepingEnterprise){
                for(Organization o:e.getOrganizationDirectory().getOrganizationList()){
                    if(o instanceof HouseholdOrganization){
                        for(Employee emp:o.getEmployeeDirectory().getEmployeeList()){
                            if((emp.getHouse() == null)){
                                Object[] row = new Object[2];
                                row[0] = emp;
                                row[1] = emp.getId();
                                model.addRow(row);
                            }
                        }
                        
                    }
                }
            }
        }
    }
    
    public void populateEmployeeHouse(){
        DefaultTableModel model = (DefaultTableModel) employeeHouseJTable.getModel();
        model.setRowCount(0);
        for(Enterprise e:city.getEnterpriseDirectory().getEnterpriseList()){
            if(e instanceof HouseKeepingEnterprise){
                for(Organization o:e.getOrganizationDirectory().getOrganizationList()){
                    if(o instanceof HouseholdOrganization){
                        for(Employee emp:o.getEmployeeDirectory().getEmployeeList()){
                            if(!(emp.getHouse() == null)){
                                Object[] row = new Object[2];
                                row[0] = emp.getId();
                                row[1] = emp.getHouse().getId();
                                model.addRow(row);
                            }
                        }
                        
                    }
                }
            }
        }      
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        houseJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        employeeHouseJTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Assign House to Employee");

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Name", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeeJTable);

        houseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "House ID", "House No", "Street Name", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(houseJTable);

        jLabel2.setText("House List:");

        jLabel3.setText("Employee List without House Assigned:");

        jButton1.setText("Assign>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        employeeHouseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "House ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(employeeHouseJTable);

        jLabel4.setText("Employee List with House Assigned:");

        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(438, 438, 438)
                                        .addComponent(jButton1))
                                    .addComponent(jButton2))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(542, 542, 542)
                        .addComponent(jLabel1)))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jButton1))
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel4)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = employeeJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                    "Please select an employee form the Employee List without House Assigned!",
                    "Message!",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int selectedRow1 = houseJTable.getSelectedRow();

        if (selectedRow1 < 0) {
            JOptionPane.showMessageDialog(this,
                    "Please select an house form the House List!",
                    "Message!",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Employee emp = (Employee) employeeJTable.getValueAt(selectedRow, 0);
        House house = (House) houseJTable.getValueAt(selectedRow1, 0);
        emp.setHouse(house);
        populateEmployee();
        populateEmployeeHouse();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable employeeHouseJTable;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JTable houseJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
